servers:
  - url: '{server}/v1'
    variables:
      server:
        default: http://localhost:1337
tags:
- name: "user"
  description: "Perform various operations on users"
schemes:
- "https"
- "http"
paths:
  /v1/users:
    get:
      tags:
      - "user"
      summary: "Get users list"
      description: ""
      operationId: "getUsers"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Users have been fetched successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersCollection'
        "401":
          description: "Missing or invalid token"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        "404":
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: User ID
          example: 24445
        username:
          type: string
          description: Username
          example: sobexx
        firstName:
          type: string
          description: First name
          example: Piotr
        lastName: 
          type: string
          description: Last name
          example: Sobu≈õ
        avatar:
          type: string
          description: URL of avatar
          example: 'https://somecloud.io/mylovelyimage.png'
        bio:
          type: string
          description: Profile description
          example: sup ppl?
    UsersCollection:
      properties:
        code:
          type: integer
          description: HTTP code
          example: 200
        message:
          type: string
          description: Response message
          example: Users have been succesfully fetched
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
    Unauthorized:
      type: object
      properties:
        code:
          type: integer
          description: HTTP code
          example: 401
        message:
          type: string
          description: Error message
          example: Missing or invalid token
    NotFound:
      type: object
      properties:
        code:
          type: integer
          description: HTTP code
          example: 404
        message: 
          type: string
          description: Error message
          example: Data not found
    InternalError:
      type: object
      properties:
        code:
          type: integer
          description: HTTP code
          example: 500
        message: 
          type: string
          description: Error message
          example: Internal server error
        stack:
          type: string
          description: Error message
          example: 'error: Error while connecting to database: error: database "\next-insta-db\" does not exist.'
    